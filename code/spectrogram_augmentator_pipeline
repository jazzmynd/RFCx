{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"17t_5Pf-XvIZJ3O9Va0-a4zcbT7HtudQj","timestamp":1669521323599}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"QBdJJEa84-Sn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670037328352,"user_tz":300,"elapsed":33417,"user":{"displayName":"Yanqi Luo","userId":"09228753133815080832"}},"outputId":"b4127a62-feea-4571-b341-c9ac4dd552b1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","import os \n","os.chdir('/content/drive/Shareddrives/AC297r Project - RFCx /code/image_augmentation/')"]},{"cell_type":"code","source":["!pip install numpy requests nlpaug --q\n","# !pip install tensorflow-io"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qzYCqRiGslez","executionInfo":{"status":"ok","timestamp":1670037334339,"user_tz":300,"elapsed":5995,"user":{"displayName":"Yanqi Luo","userId":"09228753133815080832"}},"outputId":"051bc62c-f2df-4bd1-c0de-a847d1d8edb8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[?25l\r\u001b[K     |▉                               | 10 kB 19.6 MB/s eta 0:00:01\r\u001b[K     |█▋                              | 20 kB 5.6 MB/s eta 0:00:01\r\u001b[K     |██▍                             | 30 kB 8.0 MB/s eta 0:00:01\r\u001b[K     |███▏                            | 40 kB 3.5 MB/s eta 0:00:01\r\u001b[K     |████                            | 51 kB 3.6 MB/s eta 0:00:01\r\u001b[K     |████▉                           | 61 kB 4.3 MB/s eta 0:00:01\r\u001b[K     |█████▋                          | 71 kB 4.5 MB/s eta 0:00:01\r\u001b[K     |██████▍                         | 81 kB 4.7 MB/s eta 0:00:01\r\u001b[K     |███████▏                        | 92 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |████████                        | 102 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████▉                       | 112 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████▋                      | 122 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████▍                     | 133 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████▏                    | 143 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████                    | 153 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 163 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████▋                  | 174 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████▍                 | 184 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████▏                | 194 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████                | 204 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████▊               | 215 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████▋              | 225 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████▍             | 235 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████▏            | 245 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 256 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████▊           | 266 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▌          | 276 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▍         | 286 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 296 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 307 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▊       | 317 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▌      | 327 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▍     | 337 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▏    | 348 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 358 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▊   | 368 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▌  | 378 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▎ | 389 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▏| 399 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 409 kB 4.2 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 410 kB 4.2 MB/s \n","\u001b[?25h"]}]},{"cell_type":"code","source":["import pandas as pd\n","import nlpaug.augmenter.spectrogram as nas\n","import nlpaug.flow as naf\n","import numpy as np\n","import librosa\n","from tqdm import tqdm\n","%cd /content/drive/Shareddrives/AC297r Project - RFCx /code\n","from specinput import wave_to_mel_spec, load_audio, params\n","from specinput import load_audio, wave_to_mel_spec\n","from nlpaug.util.audio.loader import AudioLoader\n","from nlpaug.util.audio.visualizer import AudioVisualizer\n","import tensorflow as tf"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pA2IHENe03ob","executionInfo":{"status":"ok","timestamp":1670037348849,"user_tz":300,"elapsed":14514,"user":{"displayName":"Yanqi Luo","userId":"09228753133815080832"}},"outputId":"49d10f30-25c3-4759-b055-575e85ec8c2a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/Shareddrives/AC297r Project - RFCx /code\n"]}]},{"cell_type":"code","source":["# train_dir = \"/content/drive/Shareddrives/AC297r Project - RFCx /image_data/puerto-rico/train/audio/p\"\n","# class_meta = pd.read_csv('/content/drive/Shareddrives/AC297r Project - RFCx /audio_data/train/class-meta.csv').drop(columns=[\"Unnamed: 0\"])"],"metadata":{"id":"BaI2nTvL5PT4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from specinput import wave_to_mel_spec, load_audio, params\n","import tensorflow as tf"],"metadata":{"id":"-mchTEbPNqyQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# path: path for the audio data\n","def freq_mask(path):\n","    data1, sample_rate = load_audio(path)\n","    data = wave_to_mel_spec(data1)\n","    # print(data1.shape)\n","    if (np.random.uniform(0,1)>0.5):\n","      zone_l, zone_r = 0, 0.15\n","    else:\n","      zone_l, zone_r = 0.85, 1\n","    coverage = np.random.uniform(0.8, 1)\n","    channel_num = np.random.randint(10,20)\n","    aug = nas.FrequencyMaskingAug(zone=(zone_l,zone_r),coverage = coverage, factor=(10,20))\n","    data2 = tf.squeeze(data).numpy()\n","    aug_data = aug.augment(data2)\n","    aug_data2=tf.convert_to_tensor(aug_data)\n","    aug_data3=tf.squeeze(aug_data2)\n","    data3=tf.expand_dims(aug_data3,-1)\n","    return data, data3\n","\n","def time_mask(path):\n","    data1, sample_rate = load_audio(path)\n","    data = wave_to_mel_spec(data1)\n","    # print(data1.shape)\n","    if (np.random.uniform(0,1)>0.5):\n","      zone_l, zone_r = 0, 0.15\n","    else:\n","      zone_l, zone_r = 0.85, 1\n","    coverage = np.random.uniform(0.1,0.2)\n","    aug = nas.TimeMaskingAug(zone=(zone_l, zone_r),coverage = coverage)\n","    data2 = tf.squeeze(data).numpy()\n","    aug_data = aug.substitute(data2) # augment?\n","    aug_data2=tf.convert_to_tensor(aug_data)\n","    aug_data3=tf.squeeze(aug_data2)\n","    data3=tf.expand_dims(aug_data3,-1)\n","    return data, data3\n","\n","def loud(path):\n","    data1, sample_rate = load_audio(path)\n","    data = wave_to_mel_spec(data1)\n","    # print(data1.shape)\n","    zone_l, zone_r = np.random.uniform(0,0.15), np.random.uniform(0.85, 1)\n","    coverage = np.random.uniform(0.8, 1)\n","    aug = nas.LoudnessAug(zone=(zone_l, zone_r),coverage=coverage, factor=(0.75, 1.25))\n","    data2 = tf.squeeze(data).numpy()\n","    aug_data = aug.augment(data2)\n","    aug_data2=tf.convert_to_tensor(aug_data)\n","    aug_data3=tf.squeeze(aug_data2)\n","    data3=tf.expand_dims(aug_data3,-1)\n","    return data, data3\n","\n","    \n"],"metadata":{"id":"JTg795uftohN"},"execution_count":null,"outputs":[]}]}